"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TEAM_HASHMAP = exports.BALL_DONT_LIE_URL = void 0;
var BALL_DONT_LIE_URL = "https://www.balldontlie.io/api/v1";
exports.BALL_DONT_LIE_URL = BALL_DONT_LIE_URL;
var TEAM_HASHMAP = {
  "1610612737": {
    nickname: "Hawks",
    fullName: "Atlanta Hawks",
    confName: "East"
  },
  "1610612738": {
    nickname: "Celtics",
    fullName: "Boston Celtics",
    confName: "East"
  },
  "1610612739": {
    nickname: "Cavaliers",
    fullName: "Cleveland Cavaliers",
    confName: "East"
  },
  "1610612740": {
    nickname: "Pelicans",
    fullName: "New Orleans Pelicans",
    confName: "West"
  },
  "1610612741": {
    nickname: "Bulls",
    fullName: "Chicago Bulls",
    confName: "East"
  },
  "1610612742": {
    nickname: "Mavericks",
    fullName: "Dallas Mavericks",
    confName: "West"
  },
  "1610612743": {
    nickname: "Nuggets",
    fullName: "Denver Nuggets",
    confName: "West"
  },
  "1610612744": {
    nickname: "Warriors",
    fullName: "Golden State Warriors",
    confName: "West"
  },
  "1610612745": {
    nickname: "Rockets",
    fullName: "Houston Rockets",
    confName: "West"
  },
  "1610612746": {
    nickname: "Clippers",
    fullName: "LA Clippers",
    confName: "West"
  },
  "1610612747": {
    nickname: "Lakers",
    fullName: "Los Angeles Lakers",
    confName: "West"
  },
  "1610612748": {
    nickname: "Heat",
    fullName: "Miami Heat",
    confName: "East"
  },
  "1610612749": {
    nickname: "Bucks",
    fullName: "Milwaukee Bucks",
    confName: "East"
  },
  "1610612750": {
    nickname: "Timberwolves",
    fullName: "Minnesota Timberwolves",
    confName: "West"
  },
  "1610612751": {
    nickname: "Nets",
    fullName: "Brooklyn Nets",
    confName: "East"
  },
  "1610612752": {
    nickname: "Knicks",
    fullName: "New York Knicks",
    confName: "East"
  },
  "1610612753": {
    nickname: "Magic",
    fullName: "Orlando Magic",
    confName: "East"
  },
  "1610612754": {
    nickname: "Pacers",
    fullName: "Indiana Pacers",
    confName: "East"
  },
  "1610612755": {
    nickname: "76ers",
    fullName: "Philadelphia 76ers",
    confName: "East"
  },
  "1610612756": {
    nickname: "Suns",
    fullName: "Phoenix Suns",
    confName: "West"
  },
  "1610612757": {
    nickname: "Trail Blazers",
    fullName: "Portland Trail Blazers",
    confName: "West"
  },
  "1610612758": {
    nickname: "Kings",
    fullName: "Sacramento Kings",
    confName: "West"
  },
  "1610612759": {
    nickname: "Spurs",
    fullName: "San Antonio Spurs",
    confName: "West"
  },
  "1610612760": {
    nickname: "Thunder",
    fullName: "Oklahoma City Thunder",
    confName: "West"
  },
  "1610612761": {
    nickname: "Raptors",
    fullName: "Toronto Raptors",
    confName: "East"
  },
  "1610612762": {
    nickname: "Jazz",
    fullName: "Utah Jazz",
    confName: "West"
  },
  "1610612763": {
    nickname: "Grizzlies",
    fullName: "Memphis Grizzlies",
    confName: "West"
  },
  "1610612764": {
    nickname: "Wizards",
    fullName: "Washington Wizards",
    confName: "East"
  },
  "1610612765": {
    nickname: "Pistons",
    fullName: "Detroit Pistons",
    confName: "East"
  },
  "1610612766": {
    nickname: "Hornets",
    fullName: "Charlotte Hornets",
    confName: "East"
  },
  "1610616833": {
    nickname: "Team Durant",
    fullName: "Team Team Durant",
    confName: "East"
  },
  "1610616834": {
    nickname: "Team LeBron",
    fullName: "Team LeBron",
    confName: "West"
  },
  "1710612762": {
    nickname: "Jazz",
    fullName: "Utah White",
    confName: "West"
  },
  "1810612762": {
    nickname: "Jazz",
    fullName: "Utah Blue",
    confName: "West"
  }
};
exports.TEAM_HASHMAP = TEAM_HASHMAP;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,